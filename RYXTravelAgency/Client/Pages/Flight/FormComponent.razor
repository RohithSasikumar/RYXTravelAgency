@inject HttpClient _client 

<EditForm Model="@flight" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">


        <label>Model: </label>

        <div>


            <InputSelect @bind-Value="flight.ModelId" class="form-control">


                <option value="">-- Select Model --</option>

                @if (Models != null)

                {

                    foreach (var model in Models)

                    {

                        <option value="@model.Id">@model.Name</option>

                    }

                }

            </InputSelect>

            <ValidationMessage For="@(() => flight.ModelId)" />

        </div>

    </div>



    <div class="form-group">


        <label>Departure: </label>

        <div>


            <InputSelect @bind-Value="flight.DepartureId" class="form-control">


                <option value="">-- Select Departure Location --</option>

                @if (Departures != null)

                {

                    foreach (var departure in Departures)

                    {

                        <option value="@departure.Id">@departure.Depart_Location</option>

                    }

                }

            </InputSelect>

            <ValidationMessage For="@(() => flight.DepartureId)" />

        </div>

    </div>





    <div class="form-group">


        <label>Arrival: </label>

        <div>


            <InputSelect @bind-Value="flight.ArrivalId" class="form-control">


                <option value="">-- Select Arrival Location --</option>

                @if (Arrivals != null)

                {

                    foreach (var arrival in Arrivals)

                    {

                        <option value="@arrival.Id">@arrival.Arriv_Location</option>

                    }

                }

            </InputSelect>

            <ValidationMessage For="@(() => flight.ArrivalId)" />

        </div>

    </div>









    <div class="form-group">


        <label>Available Seats: </label>

        <div>


            <InputNumber @bind-Value="@flight.Available_Seats" class="form-control" />

            <ValidationMessage For="@(() => flight.Available_Seats)" />

        </div>

    </div>



    <div class="form-group">


        <label>Ticket Price: </label>

        <div>


            <InputNumber @bind-Value="@flight.TicketPrice" class="form-control" />

            <ValidationMessage For="@(() => flight.TicketPrice)" />

        </div>

    </div>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">@ButtonText</button>
    }

    <BackToList Target="flights" />

</EditForm>



@code {
    [Parameter] public Flight flight { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Model> Models;
    private IList<Arrival> Arrivals;
    private IList<Departure> Departures;

    protected async override Task OnInitializedAsync()
    {
        Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
        Arrivals = await _client.GetFromJsonAsync<List<Arrival>>($"{Endpoints.ArrivalsEndpoint}");
        Departures = await _client.GetFromJsonAsync<List<Departure>>($"{Endpoints.DeparturesEndpoint}");
    }
}