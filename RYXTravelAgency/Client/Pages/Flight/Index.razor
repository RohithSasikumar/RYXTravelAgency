@page "/flights/"
@using Microsoft.AspNetCore.Authorization

@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Flights</h3>
<br />
<a href="/flights/create" class="btn btn-secondary">
        <span class="oi oi-plus"></span>
        Create New Flight
    </a>
<br />
<br />
@if (Flights == null)
{
    <div class="alert alert-info">Loading flights...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Id</th>
                <th>Model</th>
                <th>Arrival Location</th>
                <th>Departure Location</th>
                <th>Available Seats</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flight in Flights)
            {
            <tr>
                <td>@flight.Id</td>
                <td>@flight.Model.Name</td>
                <td>@flight.Arrival.Arriv_Location</td>
                <td>@flight.Departure.Depart_Location</td>
                <td>@flight.Available_Seats</td>
                <td>
                    <a href="/flights/view/@flight.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/flights/edit/@flight.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(flight.Id))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}


@code {

    public List<Flight> Flights;

    protected async override Task OnInitializedAsync()
    {
        Flights = await _client.GetFromJsonAsync<List<Flight>>($"{Endpoints.FlightsEndpoint}");
    }

    async Task Delete(int flightId)
    {
        var flight = Flights.First(q => q.Id == flightId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {flight.Available_Seats}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.FlightsEndpoint}/{flightId}");
            await OnInitializedAsync();
        }
    }
}


